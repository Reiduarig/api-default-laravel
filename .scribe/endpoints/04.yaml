name: 'Usuarios (V2)'
description: |-

  Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
  Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/v2/users
    metadata:
      custom: []
      groupName: 'Usuarios (V2)'
      groupDescription: |-

        Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
        Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar usuarios'
      description: 'Obtiene una lista paginada de usuarios con filtros avanzados, búsqueda y ordenamiento.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        custom: []
        name: page
        description: 'Número de página para paginación.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      per_page:
        custom: []
        name: per_page
        description: 'Elementos por página (máximo 100).'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      search:
        custom: []
        name: search
        description: 'Búsqueda en nombre y email.'
        required: false
        example: admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      sort:
        custom: []
        name: sort
        description: 'Campo de ordenamiento. Valores: name, email, created_at, updated_at.'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      direction:
        custom: []
        name: direction
        description: 'Dirección del ordenamiento. Valores: asc, desc.'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      include:
        custom: []
        name: include
        description: 'Relaciones a incluir. Valores: tickets.'
        required: false
        example: tickets
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      'filter[name]':
        custom: []
        name: 'filter[name]'
        description: 'Filtrar por nombre.'
        required: false
        example: admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      'filter[email]':
        custom: []
        name: 'filter[email]'
        description: 'Filtrar por email.'
        required: false
        example: admin@admin.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: admin
      sort: name
      direction: asc
      include: tickets
      'filter[name]': admin
      'filter[email]': admin@admin.com
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Usuarios obtenidos correctamente.",
            "data": [
              {
                "id": "1",
                "type": "user",
                "attributes": {
                  "name": "Admin User",
                  "email": "admin@admin.com",
                  "created_at": "2025-10-30T10:00:00.000000Z",
                  "updated_at": "2025-10-30T10:00:00.000000Z",
                  "isAdmin": true
                },
                "relationships": {
                  "tickets": {
                    "links": {
                      "self": "http://api-default-laravel.test/api/v2/users/1/relationships/tickets",
                      "related": "http://api-default-laravel.test/api/v2/users/1/tickets"
                    }
                  }
                }
              }
            ],
            "links": {
              "first": "http://api-default-laravel.test/api/v2/users?page=1",
              "last": "http://api-default-laravel.test/api/v2/users?page=10",
              "prev": null,
              "next": "http://api-default-laravel.test/api/v2/users?page=2"
            },
            "meta": {
              "total_users": 150,
              "filters_applied": {"name": "admin"},
              "includes": ["tickets"]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/v2/users
    metadata:
      custom: []
      groupName: 'Usuarios (V2)'
      groupDescription: |-

        Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
        Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear usuario'
      description: 'Crea un nuevo usuario en el sistema con validación completa y logging.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        custom: []
        name: name
        description: validation.max.
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      email:
        custom: []
        name: email
        description: validation.email.
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: validation.min.
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.type:
        custom: []
        name: data.type
        description: 'Tipo del recurso. Debe ser "user".'
        required: true
        example: user
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.name:
        custom: []
        name: data.attributes.name
        description: 'Nombre completo del usuario.'
        required: true
        example: 'Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.email:
        custom: []
        name: data.attributes.email
        description: 'Email único del usuario.'
        required: true
        example: juan@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.password:
        custom: []
        name: data.attributes.password
        description: 'Contraseña (mínimo 8 caracteres).'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.password_confirmation:
        custom: []
        name: data.attributes.password_confirmation
        description: 'Confirmación de contraseña.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      name: b
      email: zbailey@example.net
      password: '-0pBNvYgxw'
    fileParameters: []
    responses:
      -
        custom: []
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Usuario creado correctamente.",
            "data": {
              "id": "151",
              "type": "user",
              "attributes": {
                "name": "Juan Pérez",
                "email": "juan@example.com",
                "created_at": "2025-10-30T11:00:00.000000Z",
                "updated_at": "2025-10-30T11:00:00.000000Z",
                "isAdmin": false
              }
            },
            "meta": {
              "created_via": "api_v2"
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Los datos proporcionados no son válidos.",
            "data": {
              "email": ["The email has already been taken."]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/v2/users/{id}'
    metadata:
      custom: []
      groupName: 'Usuarios (V2)'
      groupDescription: |-

        Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
        Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar usuario'
      description: 'Obtiene un usuario específico con relaciones optimizadas y carga condicional.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the user.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      user:
        custom: []
        name: user
        description: 'ID del usuario.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
      user: 1
    queryParameters:
      include:
        custom: []
        name: include
        description: 'Relaciones a incluir. Valores: tickets.'
        required: false
        example: tickets
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      include: tickets
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Usuario obtenido correctamente.",
            "data": {
              "id": "1",
              "type": "user",
              "attributes": {
                "name": "Admin User",
                "email": "admin@admin.com",
                "created_at": "2025-10-30T10:00:00.000000Z",
                "updated_at": "2025-10-30T10:00:00.000000Z",
                "isAdmin": true
              },
              "relationships": {
                "tickets": {
                  "links": {
                    "self": "http://api-default-laravel.test/api/v2/users/1/relationships/tickets",
                    "related": "http://api-default-laravel.test/api/v2/users/1/tickets"
                  }
                }
              },
              "meta": {
                "version": "2.0",
                "cached_at": "2025-10-30T11:00:00.000000Z"
              }
            },
            "meta": {
              "includes": ["tickets"]
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 404
        content: |-
          {
            "status": "error",
            "message": "El recurso User solicitado no fue encontrado."
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/v2/users/{id}'
    metadata:
      custom: []
      groupName: 'Usuarios (V2)'
      groupDescription: |-

        Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
        Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar usuario'
      description: 'Elimina un usuario del sistema con validaciones de negocio y logging de auditoría.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the user.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      user:
        custom: []
        name: user
        description: 'ID del usuario.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Usuario eliminado correctamente.",
            "data": null,
            "meta": {
              "deleted_via": "api_v2"
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 403
        content: |-
          {
            "status": "error",
            "message": "No tienes permisos para realizar esta acción."
          }
        headers: []
        description: ''
      -
        custom: []
        status: 404
        content: |-
          {
            "status": "error",
            "message": "El recurso User solicitado no fue encontrado."
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
            "status": "error",
            "message": "No se puede eliminar un usuario con tickets activos.",
            "meta": {
              "active_tickets_count": 5,
              "suggested_action": "Complete or reassign active tickets before deletion"
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/v2/users/{user}/tickets'
    metadata:
      custom: []
      groupName: 'Usuarios (V2)'
      groupDescription: |-

        Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
        Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
      subgroup: ''
      subgroupDescription: ''
      title: 'Tickets de usuario'
      description: 'Obtiene todos los tickets de un usuario específico con paginación.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        custom: []
        name: user
        description: 'ID del usuario.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      user: 1
    queryParameters:
      page:
        custom: []
        name: page
        description: 'Número de página para paginación.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      per_page:
        custom: []
        name: per_page
        description: 'Elementos por página.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      page: 1
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Tickets del usuario obtenidos correctamente.",
            "data": [
              {
                "id": 1,
                "title": "Error en sistema de login",
                "description": "Los usuarios no pueden iniciar sesión",
                "status": "A",
                "priority": "high",
                "created_at": "2025-10-30T10:00:00.000000Z",
                "updated_at": "2025-10-30T10:30:00.000000Z"
              }
            ],
            "links": {
              "first": "http://api-default-laravel.test/api/v2/users/1/tickets?page=1",
              "last": "http://api-default-laravel.test/api/v2/users/1/tickets?page=3",
              "next": "http://api-default-laravel.test/api/v2/users/1/tickets?page=2"
            },
            "meta": {
              "user_id": 1,
              "total_tickets": 45
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 404
        content: |-
          {
            "status": "error",
            "message": "El recurso User solicitado no fue encontrado."
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/v2/users-statistics
    metadata:
      custom: []
      groupName: 'Usuarios (V2)'
      groupDescription: |-

        Gestión completa de usuarios con funcionalidades avanzadas, filtros, paginación y estadísticas.
        Todos los endpoints requieren autenticación Bearer token excepto donde se indique lo contrario.
      subgroup: ''
      subgroupDescription: ''
      title: 'Estadísticas de usuarios'
      description: |-
        Obtiene estadísticas completas del sistema de usuarios incluyendo métricas de actividad
        y análisis de comportamiento.
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Estadísticas de usuarios obtenidas correctamente.",
            "data": {
              "totals": {
                "total_users": 150,
                "active_users": 125,
                "users_with_tickets": 89,
                "admin_users": 5
              },
              "activity_metrics": {
                "users_created_this_month": 15,
                "most_active_users": [
                  {"id": 1, "name": "Admin User", "tickets_count": 45},
                  {"id": 5, "name": "Support Team", "tickets_count": 32}
                ],
                "users_with_pending_tickets": 25
              },
              "user_engagement": {
                "average_tickets_per_user": 3.2,
                "users_active_last_week": 89,
                "registration_trends": {
                  "this_week": 8,
                  "last_week": 12,
                  "growth_rate": "-33.3%"
                }
              }
            },
            "meta": {
              "generated_at": "2025-10-30T11:00:00.000000Z",
              "api_version": "2.0"
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
