name: 'Tickets (V1)'
description: |-

  Gestión básica de tickets de soporte con funcionalidades CRUD estándar.
  Incluye filtros básicos y paginación. Para funcionalidades avanzadas usar V2.
  Todos los endpoints requieren autenticación Bearer token.
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      custom: []
      groupName: 'Tickets (V1)'
      groupDescription: |-

        Gestión básica de tickets de soporte con funcionalidades CRUD estándar.
        Incluye filtros básicos y paginación. Para funcionalidades avanzadas usar V2.
        Todos los endpoints requieren autenticación Bearer token.
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar tickets'
      description: 'Obtiene una lista paginada de tickets con filtros básicos.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        custom: []
        name: page
        description: 'Número de página para paginación.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      'filter[status]':
        custom: []
        name: 'filter[status]'
        description: 'Filtrar por estado. Valores: A(abierto), H(en_progreso), C(cerrado), X(cancelado).'
        required: false
        example: A
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      'filter[priority]':
        custom: []
        name: 'filter[priority]'
        description: 'Filtrar por prioridad. Valores: low, medium, high, critical.'
        required: false
        example: high
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      'filter[author_id]':
        custom: []
        name: 'filter[author_id]'
        description: 'Filtrar por ID del autor.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      page: 1
      'filter[status]': A
      'filter[priority]': high
      'filter[author_id]': 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Tickets obtenidos correctamente.",
            "data": [
              {
                "id": 1,
                "title": "Error en sistema de login",
                "description": "Los usuarios no pueden iniciar sesión",
                "status": "A",
                "priority": "high",
                "author_id": 1,
                "created_at": "2025-10-30T10:00:00.000000Z",
                "updated_at": "2025-10-30T10:30:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      custom: []
      groupName: 'Tickets (V1)'
      groupDescription: |-

        Gestión básica de tickets de soporte con funcionalidades CRUD estándar.
        Incluye filtros básicos y paginación. Para funcionalidades avanzadas usar V2.
        Todos los endpoints requieren autenticación Bearer token.
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear ticket'
      description: 'Crea un nuevo ticket de soporte en el sistema.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        custom: []
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data:
        custom: []
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.attributes.title:
        custom: []
        name: data.attributes.title
        description: 'Título del ticket (máximo 255 caracteres).'
        required: true
        example: 'Error en sistema de login'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.description:
        custom: []
        name: data.attributes.description
        description: 'Descripción detallada del problema.'
        required: true
        example: 'Los usuarios no pueden iniciar sesión'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.status:
        custom: []
        name: data.attributes.status
        description: "Estado inicial (opcional, por defecto 'A'). Valores: A, H, C, X."
        required: false
        example: A
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.relationships.author.data:
        custom: []
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.relationships.author:
        custom: []
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.relationships:
        custom: []
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.relationships.author.data.id:
        custom: []
        name: data.relationships.author.data.id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.attributes.priority:
        custom: []
        name: data.attributes.priority
        description: 'Prioridad del ticket. Valores: low, medium, high, critical.'
        required: true
        example: high
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.internal_notes:
        custom: []
        name: data.attributes.internal_notes
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        deprecated: false
      data.attributes.view_count:
        custom: []
        name: data.attributes.view_count
        description: validation.min.
        required: false
        example: 39
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.type:
        custom: []
        name: data.type
        description: 'Tipo del recurso. Debe ser "ticket".'
        required: true
        example: ticket
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      data:
        attributes:
          title: 'Error en sistema de login'
          description: 'Los usuarios no pueden iniciar sesión'
          status: A
          priority: high
          internal_notes: architecto
          view_count: 39
        relationships:
          author:
            data:
              id: 16
        type: ticket
    fileParameters: []
    responses:
      -
        custom: []
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Ticket creado correctamente.",
            "data": {
              "id": 101,
              "title": "Error en sistema de login",
              "description": "Los usuarios no pueden iniciar sesión",
              "status": "A",
              "priority": "high",
              "author_id": 1,
              "created_at": "2025-10-30T11:00:00.000000Z",
              "updated_at": "2025-10-30T11:00:00.000000Z"
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Los datos proporcionados no son válidos.",
            "data": {
              "title": ["The title field is required."]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      custom: []
      groupName: 'Tickets (V1)'
      groupDescription: |-

        Gestión básica de tickets de soporte con funcionalidades CRUD estándar.
        Incluye filtros básicos y paginación. Para funcionalidades avanzadas usar V2.
        Todos los endpoints requieren autenticación Bearer token.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar ticket'
      description: 'Obtiene un ticket específico por su ID.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      ticket:
        custom: []
        name: ticket
        description: 'ID del ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Ticket obtenido correctamente.",
            "data": {
              "id": 1,
              "title": "Error en sistema de login",
              "description": "Los usuarios no pueden iniciar sesión",
              "status": "A",
              "priority": "high",
              "author_id": 1,
              "created_at": "2025-10-30T10:00:00.000000Z",
              "updated_at": "2025-10-30T10:30:00.000000Z"
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 404
        content: |-
          {
            "status": "error",
            "message": "El recurso Ticket solicitado no fue encontrado."
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/tickets/{id}'
    metadata:
      custom: []
      groupName: 'Tickets (V1)'
      groupDescription: |-

        Gestión básica de tickets de soporte con funcionalidades CRUD estándar.
        Incluye filtros básicos y paginación. Para funcionalidades avanzadas usar V2.
        Todos los endpoints requieren autenticación Bearer token.
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar ticket'
      description: 'Actualiza un ticket existente en el sistema.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      ticket:
        custom: []
        name: ticket
        description: 'ID del ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        custom: []
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data:
        custom: []
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.attributes.title:
        custom: []
        name: data.attributes.title
        description: 'Título del ticket.'
        required: false
        example: 'Error en sistema de login (solucionado)'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.description:
        custom: []
        name: data.attributes.description
        description: 'Descripción del problema.'
        required: false
        example: 'Error solucionado mediante actualización'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.status:
        custom: []
        name: data.attributes.status
        description: 'Estado del ticket. Valores: A, H, C, X.'
        required: false
        example: C
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.relationships.author.data:
        custom: []
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.relationships.author:
        custom: []
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.relationships:
        custom: []
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.relationships.author.data.id:
        custom: []
        name: data.relationships.author.data.id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.attributes.priority:
        custom: []
        name: data.attributes.priority
        description: 'Prioridad. Valores: low, medium, high, critical.'
        required: false
        example: medium
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      data.attributes.internal_notes:
        custom: []
        name: data.attributes.internal_notes
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        deprecated: false
      data.attributes.view_count:
        custom: []
        name: data.attributes.view_count
        description: validation.min.
        required: false
        example: 39
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.type:
        custom: []
        name: data.type
        description: 'Tipo del recurso. Debe ser "ticket".'
        required: true
        example: ticket
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      data:
        attributes:
          title: 'Error en sistema de login (solucionado)'
          description: 'Error solucionado mediante actualización'
          status: C
          priority: medium
          internal_notes: architecto
          view_count: 39
        relationships:
          author:
            data:
              id: 16
        type: ticket
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Ticket actualizado correctamente.",
            "data": {
              "id": 1,
              "title": "Error en sistema de login (solucionado)",
              "description": "Error solucionado mediante actualización",
              "status": "C",
              "priority": "medium",
              "author_id": 1,
              "created_at": "2025-10-30T10:00:00.000000Z",
              "updated_at": "2025-10-30T11:30:00.000000Z"
            }
          }
        headers: []
        description: ''
      -
        custom: []
        status: 404
        content: |-
          {
            "status": "error",
            "message": "El recurso Ticket solicitado no fue encontrado."
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
            "status": "error",
            "message": "Los datos proporcionados no son válidos.",
            "data": {
              "status": ["The selected status is invalid."]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{id}'
    metadata:
      custom: []
      groupName: 'Tickets (V1)'
      groupDescription: |-

        Gestión básica de tickets de soporte con funcionalidades CRUD estándar.
        Incluye filtros básicos y paginación. Para funcionalidades avanzadas usar V2.
        Todos los endpoints requieren autenticación Bearer token.
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar ticket'
      description: 'Elimina un ticket del sistema de forma permanente.'
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_BEARER_TOKEN'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      ticket:
        custom: []
        name: ticket
        description: 'ID del ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: architecto
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "status": "success",
            "message": "El ticket ha sido eliminado correctamente.",
            "data": null
          }
        headers: []
        description: ''
      -
        custom: []
        status: 403
        content: |-
          {
            "status": "error",
            "message": "No tienes permisos para realizar esta acción."
          }
        headers: []
        description: ''
      -
        custom: []
        status: 404
        content: |-
          {
            "status": "error",
            "message": "El recurso Ticket solicitado no fue encontrado."
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
